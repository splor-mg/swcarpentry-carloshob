read.csv(file = "data/inflammation-01.csv", header = FALSE)
?read.csv
read.csv(file = "data/inflammation-01.csv", )
read.csv(file = "data/inflammation-01.csv")
read.csv(file = "data/commadec.txt")
read.csv2(file = "data/commadec.txt")
read.csv(file = "data/commadec.txt", sep = ";", dec = ",")
weight_Kg <- 55
weight_Kg
2,2*weight_Kg
2.2*weight_Kg
.2*weight_Kg
weight_Kg <- 55.7
weight_lb <- 2.2 * weight_Kg
weight_Kg
weight_lb
weight_Kg <- 57.5 #new weight
weight_lb <- 2.2 * weight_Kg # weight in pounds
weight_lb
(total_weight <- weight_Kg*2.2 + weight_lb)
weight_Kg*2.2
weight_lb
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
(dat)
head(dat)
head(dat)
class(dat)
dim(dat)
class(dat)
dim(dat)
dat[1,1]
dat[1, 1]
dat[30, 20]
dat[c(1,2,5), c(10,20)]
dat[1:5, 3:12]
dat[5, ] # All columns from row 5
dat[1:5, ] # All columns from row 1:5
dat[, 16:18] # All rows from column 16-18
center <- function(data, midpoint) {
new_data <- (data - mean(data, na.rm = TRUE)) + midpoint
return(new_data)
}
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
datNA <- dat
datNA[10,4] <- NA
center(datNA, 0)
center(datNA[,4], 0, na.rm = FALSE)
center(datNA, 0)
center(datNA[,4], 0)
center <- function(data, midpoint) {
new_data <- (data - mean(data, na.rm = TRUE)) + midpoint
return(new_data)
}
datNA <- dat
datNA[10,4] <- NA
center(datNA[,4], 0)
center(datNA, 0)
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
dat
datNA <- dat
center(datNA, 0)
is.na(datNA)
datNA[,1] <- as.factor(datNA[,1])
center(datNA[,1],0)
datNA[,2] <- as.character(datNA[,2])
center(datNA[,2],0)
?center
?read.csv
?roxygen2
installed_packages <- installed.packages()
print(installed_packages)
?apply
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
dat <- read.csv(file = filename, header = FALSE)
avg_day_inflammation <- apply(dat, 2, mean)
plot(avg_day_inflammation)
max_day_inflammation <- apply(dat, 2, max)
plot(max_day_inflammation)
min_day_inflammation <- apply(dat, 2, min)
plot(min_day_inflammation)
}
analyze("data/inflammation-01.csv")
avg_day_inflammation <- apply(dat, 2, mean)
plot(avg_day_inflammation)
max_day_inflammation <- apply(dat, 2, max)
plot(max_day_inflammation)
min_day_inflammation <- apply(dat, 2, min)
plot(min_day_inflammation)
analyze("data/inflammation-02.csv")
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
dat <- read.csv(filename, header = FALSE)
avg_day_inflammation <- apply(dat, 2, mean)
plot(avg_day_inflammation)
max_day_inflammation <- apply(dat, 2, max)
plot(max_day_inflammation)
min_day_inflammation <- apply(dat, 2, min)
plot(min_day_inflammation)
}
analyze("data/inflammation-01.csv")
?read.csv
?names
display <- function(a = 1, b = 2, c = 3) {
result  <- c(a, b, c)
names(result) <- c("d", "e", "f")
return(result)
}
display()
display(2)
display(2, 1, 1)
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
centered <- center(dat[, 4], 0)
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
centered <- center(dat[, 4], 0)
centered
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
max_day_inflammation <- apply(dat, 2, max)
max_day_inflammation
plot(max_day_inflammation)
analyze("data/inflammation-02.csv")
df <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David"),
Age = c(25, 30, 35, 40),
Gender = c("Female", "Male", "Male", "Male")
)
# Viewing the data.frame
print(df)
plot(df)
best_practice <- c("Let", "the", "computer", "do", "the", "work")
print_words <- function(sentence) {
print(sentence[1])
print(sentence[2])
print(sentence[3])
print(sentence[4])
print(sentence[5])
print(sentence[6])
}
print_words(best_practice)
best_practice[,2]
best_practice[2]
best_practice[-2]
best_practice[-6]
best_practice[-1]
best_practice[7]
print_words <- function(sentence) {
for (word in sentence) {
print(word)
}
}
print_words <- function(sentence) {
for (phrase in sentence) {
print(word)
}
}
print_words(best_practice)
print_words <- function(sentence) {
for (phrase in sentence) {
print(phrase)
}
}
print_words(best_practice)
len <- 0
vowels <- c("a", "e", "i", "o", "u")
for (v in vowels) {
len <- len + 1
}
len
for (v in vowels) {print(v)}
test <- for (v in vowels) {print(v)}
test
test <- funcion(vowels) {
test <- function(vowels) {
for (v in vowels) {
print(v)
}
}
test(vowels)
printN <- function(N){
nseq <- seq(N)
for (num in nseq) {
print(num)
}
}
printN(3)
seq(10)
total <- function(vector){
vector <- 0
for (number in vector) {
vec_sum <- vector + number
}
return(vec_sum)
}
total <- function(vector){
vector_sum <- 0
for (number in vector) {
vec_sum <- vector_sum + number
}
return(vec_sum)
}
exec_vec <- c(4, 8, 15, 16, 23, 42)
total(exec_vec)
total <- function(vector){
vector_sum <- 0
for (number in vector) {
vec_sum <- vector_sum + number
}
return(vec_sum)
}
exec_vec <- c(4, 8, 15, 16, 23, 42)
total(exec_vec)
total <- function(vector){
vector_sum <- 0
for (number in vector) {
vector_sum <- vector_sum + number
}
return(vec_sum)
}
exec_vec <- c(4, 8, 15, 16, 23, 42)
total(exec_vec)
total <- function(vector){
vector_sum <- 0
for (number in vector) {
vector_sum <- vector_sum + number
}
return(vector_sum)
}
exec_vec <- c(4, 8, 15, 16, 23, 42)
total(exec_vec)
expo <- function(exponent, number){
result <- number ^ exponent
return(result)
}
expo(2,4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
result <- times * base
}
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
result <- times * num
}
}
expo2(2, 4)
expo2
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
result <- times * num
}
return(result)
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
times <- times * num
}
return(times)
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
result <- times * num
}
return(times)
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
result <- times * num
}
return(times)
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
result <- times * num
}
return(result)
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
times <- times * num
}
return(result)
}
expo2(2, 4)
expo2 <- function(num, numexpo){
times <- 1
for(n in seq(numexpo)){
times <- times * num
}
return(times)
}
expo2(2, 4)
#processing Multiple File# ---
list.files()
#processing Multiple File# ---
?list.files()
list.files(.)
list.files(.,)
list.files("data","csv")
filesnames(list.files())
filenames <- list.files()
source("C:/projects/swcarpentry-carloshob/r-novice-inflammation/creating-funcionts.R", echo=TRUE)
filenames <- list.files()
filenames
filenames[1:3]
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
dat <- read.csv(filename, header = FALSE)
avg_day_inflammation <- apply(dat, 2, mean)
plot(avg_day_inflammation)
max_day_inflammation <- apply(dat, 2, max)
plot(max_day_inflammation)
min_day_inflammation <- apply(dat, 2, min)
plot(min_day_inflammation)
}
filenames <- list.files(path = "data",
# Now follows a regular expression that matches:
pattern = "inflammation-[0-9]{2}.csv",
#          |            |        the standard file extension of comma-separated values
#          |            the variable parts (two digits, each between 0 and 9)
#          the static part of the filenames
full.names = TRUE)
filenames <- filenames[1:3]
for (f in filenames) {
print(f)
analyze(f)
}
list.files(data)
list.files("data")
filenames <- list.files(path = "data",
# Now follows a regular expression that matches:
pattern = "inflammation-[0-12]{2}.csv",
#          |            |        the standard file extension of comma-separated values
#          |            the variable parts (two digits, each between 0 and 9)
#          the static part of the filenames
full.names = TRUE)
for (f in filenames) {
print(f)
analyze(f)
}
list.files("data")
filenames <- list.files(path = "data",
# Now follows a regular expression that matches:
pattern = "inflammation-[0-9]{2}.csv",
#          |            |        the standard file extension of comma-separated values
#          |            the variable parts (two digits, each between 0 and 9)
#          the static part of the filenames
full.names = TRUE)
for (f in filenames) {
print(f)
analyze(f)
}
filenames <- list.files(path = "data",
# Now follows a regular expression that matches:
pattern = "inflammation-[0-12]{2}.csv",
#          |            |        the standard file extension of comma-separated values
#          |            the variable parts (two digits, each between 0 and 9)
#          the static part of the filenames
full.names = TRUE)
for (f in filenames) {
print(f)
analyze(f)
}
list.files
len <- 0
vowels <- c("a", "e", "i", "o", "u")
for (v in vowels) {
len <- len + 1
}
len
for (v in vowels) {
len <- len + 1
return(len)
}
len <- 0
vowels <- c("a", "e", "i", "o", "u")
for (v in vowels) {
len <- len + 1
return(len)
}
len
len <- 0
vowels <- c("a", "e", "i", "o", "u")
for (v in vowels) {
len <- len + 1
return(len)
}
len
len <- 0
vowels <- c("a", "e", "i", "o", "u")
for (v in vowels) {
len <- len + 1
}
len
for (v in vowels) {
len <- len + 1
print(len)
}
len <- 0
vowels <- c("a", "e", "i", "o", "u")
for (v in vowels) {
len <- len + 1
print(len)
}
